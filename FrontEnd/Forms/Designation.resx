<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="guna2Elipse2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>160, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIFSURBVGhD7ZS9SgNBFIVjIVhbiloLPktKQXwAX0DsLfUFfABbFSz92exidpgsEsG3EAUN0SJW
        xjtyGC6TK1yTyU6K/eDD4Jw5c1C01dDQEJ9+v7/cKe1Ox/ROf6XP7ns4XlxujVnrlL1j8pUcB76Qxy6D
        +OKQm4dt+imf0cAvNvgvKWPP3B1cT8N4PF6iMe287N3R1282UOs37rZdF2rnT1EUK3lZ7dPDT2zMrD65
        TteNZ+Jzbe0qPXREPrOHY+u6j9xbeHZ2iqJap1/1SaesBsFjc7QauDfd25gxHXnXHlLhaPKB2hxlZXWA
        Of8jN3ZPKExi1q12MUsPXYz5Rzqrj5ilhy5p/qfX5Qiz9AglScUsPVIJFzFP7PNQxPRIJVzEPLHPQxHT
        I5VwEfPEPg9FTI9UwkXME/s8FDE9UklKMUuPVJJSzNIjlaQUs/RIJSnFLD1SCRcxT+zzUMT0SCVcxDyx
        z0MR0yOVcBHzxD4PRUyPVMJFzBP7PBQxPVJJSjFLj1SSUszSI5WkFLP0SCUpxSw9UgkXMU/s81DE9Egl
        XMQ8sc9DEdMjlXAR88Q+D0VMj1TCRcwT+zwUMT1SSUoxS49UklLM0kOXPsOShA4xS09m7JVQlEh7jll6
        Cmu36PL7ZFntvt3cP2xg1v+4M2aTCi7JD1ZYl8PM9C6mHt/Q0NBQA63WD0VE+vTWwxQ+AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGjSURBVGhD7ZrLTsMwEEXzLbCAJTvY8sE8fibN6xOoqhaJNcxUM1KwmsiOJ46t3CPdVe2Oj5w6
        bpwKAAAAAAAAkI5hGO4Ph8Nn0zTfnLZtP/q+v5OPzUld7x9d1z1S0RPl18m5rutnaWYGib7wdzu1OCcS
        f5Bm60GF3p3C45hKi+zFqTHOmzRdDyoyNwCOibSHLOcszdeDivDv6FbxcaKkPWU5F+myHlRk7pIeZ5F0
        gCxn/Ut6ZtG6lSDpQNk0ixZDEk9U8OgMYCo/NLBX6ToJt+G2Tt+pHHkM0jUNltLZyyoW0sXIKjHSxckq
        S6SLlVUCV1jeKnq3JVmz3ZspgTPtk/xm1sVQOn9ZxUC6HFklQro8WSVwIePku0D5EHjr4XhtQ7Nkgaym
        POkIWU050gaymvylDWU1+UrvamsZOLPX+2zgfTqfmV4iK10X/cuSrtsQI6sUI20hq2QvbSmrZCu9u8e0
        VGhfD+KpiM9gou6dAdJZnC2ZbBQ8pTc/WzLdFXlIb3q2ZCqriPR2B+LM6BWELw4VTvXKQ5J6AAAAAAAA
        AJeq+gM3nCCOQ/enNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>